{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","index","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLocaleLowerCase","includes","console","log","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACvB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAK,SAASC,IAAG,+BAA0BH,EAA1B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCOLK,EAZE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACtC,OAAO,cAAC,EAAD,CAAkBT,GAAIK,EAAOI,GAAOT,GAAIF,KAAMO,EAAOI,GAAOX,KAAMC,MAAOM,EAAOI,GAAOV,OAA5EU,MAGnB,OACI,8BACCH,KCHMI,EAPG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,uBACAV,UAAY,mCAAmCW,KAAM,SAASC,YAAc,gBAC5EC,SAAUH,KCOHI,EAVA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAACC,UAAY,SAASC,OAAS,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YC4CJC,G,wDAzCP,aAAe,IAAD,8BACN,gBAcRC,eAAiB,SAACC,GACV,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAd1C,EAAKC,MAAQ,CACLxB,OAAQ,GACRqB,YAAa,IAJf,E,qDASd,WAAqB,IAAD,OACZI,MAAM,8CACGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEpB,OAAQ6B,S,oBASvD,WACQ,MAAgCC,KAAKN,MAA7BxB,EAAR,EAAQA,OAAQqB,EAAhB,EAAgBA,YACVU,EAAiB/B,EACdgC,QAAO,SAAAC,GAAK,OAAIA,EAAMxC,KAAKyC,oBAAoBC,SAASd,MAEjE,OADAe,QAAQC,IAAIN,GACJ/B,EAAOsC,OAGC,sBAAK1C,UAAU,KAAf,UACQ,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACQ,cAAC,EAAD,CAAUlB,OAAQ+B,SAN1C,8C,GA5BNQ,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.422af49a.chunk.js","sourcesContent":["import React  from 'react';\r\n\r\nconst Card = ({name, email,id}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 ma2 pa3 grow bw2 shadow-5'>\r\n            <img alt =\"robots\" src={`https://robohash.org/${id}?200x200`}></img>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport  Card  from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComponent = robots.map((user,index) => {\r\n     return <Card key={index} id={robots[index].id} name={robots[index].name} email={robots[index].email}></Card>\r\n    });\r\n\r\n    return(\r\n        <div>\r\n        {cardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","const SearchBox = ({searchChange}) => {\r\n    return (\r\n        <input \r\n        className = 'pa3 ba b--green bg-lightest-blue' type =\"search\" placeholder = 'search robots'\r\n        onChange={searchChange}></input>);\r\n  \r\n}\r\nexport default SearchBox;\r\n","\r\nconst Scroll = (props) => {\r\n\r\n    return (\r\n        <div style={{overflowY : 'scroll',border : '1px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component {\r\n        constructor() {\r\n                super();\r\n                this.state = {\r\n                        robots: [],\r\n                        searchfield: '',\r\n                };\r\n\r\n        }\r\n\r\n        componentDidMount() {\r\n                fetch('https://jsonplaceholder.typicode.com/users')\r\n                        .then(response => response.json())\r\n                        .then(users => this.setState({ robots: users }))\r\n        }\r\n\r\n        onSearchChange = (event) => {\r\n                this.setState({ searchfield: event.target.value })\r\n\r\n        }\r\n\r\n\r\n        render() {\r\n                const { robots, searchfield } = this.state;\r\n                const filteredRobots = robots\r\n                        .filter(robot => robot.name.toLocaleLowerCase().includes(searchfield));\r\n                console.log(filteredRobots);\r\n                return !robots.length ?\r\n                        <h1> Loading</h1> :\r\n                        (\r\n                                <div className=\"tc\">\r\n                                        <h1 className=\"f1\">Robofriends</h1>\r\n                                        <SearchBox searchChange={this.onSearchChange}></SearchBox>\r\n                                        <Scroll>\r\n                                                <CardList robots={filteredRobots}></CardList>\r\n                                        </Scroll>\r\n                                </div>\r\n                        );\r\n\r\n        }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}